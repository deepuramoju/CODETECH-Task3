#1. Install Required Libraries
pip install flask scikit-learn pandas joblib

#Step 1: Model Training & Saving 
# train_model.py
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
import joblib
from sklearn.datasets import load_iris

# Load iris dataset
iris = load_iris()
X = pd.DataFrame(iris.data, columns=iris.feature_names)
y = iris.target

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = LogisticRegression(max_iter=200)
model.fit(X_train, y_train)

# Save model
joblib.dump(model, 'iris_model.pkl')

# Step 2: Flask API 
# app.py
from flask import Flask, request, jsonify
import joblib
import numpy as np

app = Flask(__name__)
model = joblib.load('iris_model.pkl')

@app.route('/')
def home():
    return "Welcome to the Iris Flower Prediction API!"

@app.route('/predict', methods=['POST'])
def predict():
    data = request.get_json()  # Expecting a JSON with 4 features
    features = [data['sepal_length'], data['sepal_width'], data['petal_length'], data['petal_width']]
    prediction = model.predict([features])[0]

    classes = ['Setosa', 'Versicolor', 'Virginica']
    return jsonify({
        'prediction': int(prediction),
        'flower_type': classes[prediction]
    })

if __name__ == '__main__':
    app.run(debug=True)

#4. Sample Request (Test with curl or Postman)
curl -X POST http://127.0.0.1:5000/predict -H "Content-Type: application/json" -d \
'{
    "sepal_length": 5.1,
    "sepal_width": 3.5,
    "petal_length": 1.4,
    "petal_width": 0.2
}'

